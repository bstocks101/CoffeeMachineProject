var flowControl = {None : 0, Low : 1, Medium : 2, High : 4};
var faucetWaterTemperature = {Notset : 0, Cold : 1, Warm : 2};

function Water(){
	//private instances
	var waterTemperature = faucetWaterTemperature.NotSet;
	var quantity;
	//public instances
	this.WaterTemperature = waterTemperature;
	this.setQuantity = function(newValue){
		this.quantity = newValue;
	}
	this.getQuantity = function(){
		return this.quantity;
	}
	this.add = function(quantity){
		this.quantity += quantity;
	}
}

function Faucet(){
	var flow = flowControl.None;
	this.Flow = flow;
	this.open = function(flow){
		this.flow = flow;
	}

	this.close = function(){
		this.flow = flowControl.None;
	}

	this.getWater = function(quantity){
		var water = new Water();
		alert("Super");
		this.open(flowControl.Low);
		while(water.Quantity < quantity){
			water.add(this.Flow);
		}
		this.close();
		return water;
	}
}

function ColdWaterFaucet(){
	var instance = null;

	function constructor(){
		return{
			this.prototype = new Faucet();
			this.getWater = function(quantity){
				var water = this.prototype.getWater(quantity);
				alert("sub");
				water.WaterTemperature = faucetWaterTemperature.Cold;
				return water;
			}
		}
	}
	return{
		getInstance = function(){
			if(!instance){
				instance = constructor();
			}
			return instance;
		}
	}
}

function WarmWaterFaucet(){
	var instance = null;

	function constructor(){
		return{
			this.prototype = new Faucet();
			this.getWater = function(quantity){
				var water = this.prototype.getWater(quantity);
				alert("sub");
				water.WaterTemperature = faucetWaterTemperature.Warm;
				return water;
			}
		}
	}
	return{
		getInstance = function(){
			if(!instance){
				instance = constructor();
			}
			return instance;
		}
	}
}